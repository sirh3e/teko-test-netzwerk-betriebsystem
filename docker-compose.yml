version: '3.10'

services:
  webapp:
    container_name: webapp
    build: 
      context: ./webapp
      dockerfile: Dockerfile
    environment:
      WEBAPP_DB_NAME: ${POSTGRES_DB}
      WEBAPP_DB_USER: ${POSTGRES_USER}
      WEBAPP_DB_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: db
    depends_on:
      - db
    restart: always
    volumes:
      - webapp_data:/usr/src/webapp
    ports:
      - "3000:3000"
    networks:
      - webapp_networks
      - db_networks
  db:
    container_name: db
    image: postgres:16-bookworm
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - db_networks
  proxy:
    container_name: proxy
    image: nginx:alpine
    environment:
      NGINX_PORT: 80
    depends_on:
      - webapp
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/html/static:/etc/nginx/html/static:ro
      - proxy_data:/etc/nginx/
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      - webapp_networks
      - proxy_networks

volumes:
  db_data: {}
  proxy_data: {}
  webapp_data: {}

networks:
  db_networks: {}
  proxy_networks:
    driver: bridge
  webapp_networks:
    driver: bridge